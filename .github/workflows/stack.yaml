name: Stack

# Builds and tests using the runner-provided Stack.
#
# We install Nix and Cachix on runners with Unix-like OSes (Ubuntu, macOS) to speed up builds.
#
# More on the software available on GitHub Actions runners:
#
# Ubuntu: https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
# macOS: https://github.com/actions/runner-images/blob/main/images/macos/macos-12-Readme.md
# Windows: https://github.com/actions/runner-images/blob/main/images/win/Windows2022-Readme.md

on:
  - push
  # - pull_request

defaults:
  run:
    shell: bash

jobs:
  # Windows is a bit special in that it's the only platform we build for where R isn't provided by
  # Nix.
  windows:
    name: windows - ${{ matrix.r-version }} - ${{ matrix.stack-yaml }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        r-version: ["4.2.2", "4.1.3", "4.0.5"]
        stack-yaml: [stack.yaml, stack-lts-19.yaml, stack-lts-18.yaml]
    steps:
      - name: Clone the source
        uses: actions/checkout@v3

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Build stack project
        uses: ./.github/actions/stack-build
        with:
          stack-yaml: ${{ matrix.stack-yaml }}
          enable-nix: false
          include-r-dirs: true
          build-targets: inline-r H
          test-targets: inline-r H

  unix:
    name: ${{ matrix.os }} - ${{ matrix.stack-yaml }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        stack-yaml: [stack.yaml, stack-lts-19.yaml, stack-lts-18.yaml]
    steps:
      - name: Clone the source
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=./nix/nixpkgs.nix

      - name: Install Cachix
        uses: cachix/cachix-action@v12
        with:
          name: tweag-haskellr
          authToken: ${{ secrets.CACHIX_TWEAG_HASKELLR_AUTH_TOKEN }}
          cachixArgs: --compression-method zstd --compression-level 16

      - name: Build stack project (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: ./.github/actions/stack-build
        with:
          stack-yaml: ${{ matrix.stack-yaml }}
          enable-nix: true
          include-r-dirs: false
          # The default is to build and test everything

      - name: Build stack project (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: ./.github/actions/stack-build
        with:
          stack-yaml: ${{ matrix.stack-yaml }}
          enable-nix: true
          include-r-dirs: false
          test-targets: inline-r
