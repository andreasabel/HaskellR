name: Windows CI
on: [push]

jobs:
  build:
    name: Build - R ${{ matrix.r_version }} - ${{ matrix.stack_yaml }}
    runs-on: windows-latest
    strategy:
      matrix:
        # Because Chocolatey has multiple versions of R, we will test against
        # the latest three versions.
        r_version: ["4.0.5", "4.1.3", "4.2.2"]
        stack_yaml: [stack.yaml, stack-lts-19.yaml, stack-lts-18.yaml]
    steps:
      - name: Install stack
        uses: haskell/actions/setup@v2
        with:
          # Install stack, but not GHC.
          enable-stack: true
          ghc-version: ""

      - name: Install R
        run: choco install -y r --version ${{ matrix.r_version }}

      - name: Set handy STACK_CMD environment variable
        run: echo "STACK_CMD=stack --stack-yaml ${{ matrix.stack_yaml }}" >> $env:GITHUB_ENV

      - name: Clone source
        uses: actions/checkout@v3

      - name: Get Stack snapshot install directory
        id: stack-snapshot
        run: |
          $env:STACK_SNAPSHOT_INSTALL_ROOT = $($env:STACK_CMD path --snapshot-install-root)
          echo "::set-output name=dir::$STACK_SNAPSHOT_INSTALL_ROOT"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.stack-snapshot.outputs.dir }}
          key: ${{ runner.os }}-R${{ matrix.r_version }}-${{ steps.stack-snapshot.outputs.dir }}-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-R${{ matrix.r_version }}-${{ steps.stack-snapshot.outputs.dir }}-

      - name: Build
        run: |
          $STACK_CMD build inline-r H `
            --extra-lib-dirs="C:/Program files/R/R-${{ matrix.r_version }}/bin/x64" `
            --extra-include-dirs="C:/Program files/R/R-${{ matrix.r_version }}/include"
